{"ast":null,"code":"import { createStore } from \"redux\";\nimport { RANDOM_RADIO_IS_CHEKED, CATEGORIES_RADIO_IS_CHEKED, SEARCH_RADIO_IS_CHEKED, GET_RANDOM_JOKE, GET_FAVORITE_JOKES, CATEGORY_TO_FIND, SEARCH_FIND_VALUE, GET_JOKES_FROM_SEARCH } from \"./actions\";\n\nfunction getFromLocalStorage(key) {\n  return JSON.parse(localStorage.getItem(key));\n}\n\nconst initialState = {\n  randomRadioIsCheked: false,\n  categoriesRadioIsCheked: false,\n  selectedCategory: \"\",\n  seacrhRadioIsCheked: false,\n  searchFindValue: \"\",\n  getRandomJoke: null,\n  getJokesFromSearch: [],\n  favoriteJokes: getFromLocalStorage(\"favJoke\") || []\n};\n\nfunction reducer() {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case RANDOM_RADIO_IS_CHEKED:\n      {\n        return { ...state,\n          randomRadioIsCheked: action.payload,\n          categoriesRadioIsCheked: false,\n          seacrhRadioIsCheked: false\n        };\n      }\n\n    case CATEGORIES_RADIO_IS_CHEKED:\n      {\n        return { ...state,\n          randomRadioIsCheked: false,\n          categoriesRadioIsCheked: action.payload,\n          seacrhRadioIsCheked: false\n        };\n      }\n\n    case CATEGORY_TO_FIND:\n      {\n        return { ...state,\n          selectedCategory: action.payload\n        };\n      }\n\n    case SEARCH_RADIO_IS_CHEKED:\n      {\n        return { ...state,\n          randomRadioIsCheked: false,\n          categoriesRadioIsCheked: false,\n          seacrhRadioIsCheked: action.payload\n        };\n      }\n\n    case SEARCH_FIND_VALUE:\n      {\n        return { ...state,\n          searchFindValue: action.payload\n        };\n      }\n\n    case GET_RANDOM_JOKE:\n      {\n        return { ...state,\n          getRandomJoke: action.payload\n        };\n      }\n\n    case GET_JOKES_FROM_SEARCH:\n      {\n        return { ...state,\n          getJokesFromSearch: action.payload\n        };\n      }\n\n    case GET_FAVORITE_JOKES:\n      {\n        return { ...state,\n          favoriteJokes: action.payload\n        };\n      }\n\n    default:\n      {\n        return { ...state\n        };\n      }\n  }\n}\n\nconst store = createStore(reducer);\nexport default store;","map":{"version":3,"sources":["/Users/max/Documents/Web-разработка/Exam/Chuck-app/src/store.js"],"names":["createStore","RANDOM_RADIO_IS_CHEKED","CATEGORIES_RADIO_IS_CHEKED","SEARCH_RADIO_IS_CHEKED","GET_RANDOM_JOKE","GET_FAVORITE_JOKES","CATEGORY_TO_FIND","SEARCH_FIND_VALUE","GET_JOKES_FROM_SEARCH","getFromLocalStorage","key","JSON","parse","localStorage","getItem","initialState","randomRadioIsCheked","categoriesRadioIsCheked","selectedCategory","seacrhRadioIsCheked","searchFindValue","getRandomJoke","getJokesFromSearch","favoriteJokes","reducer","state","action","type","payload","store"],"mappings":"AAAA,SAASA,WAAT,QAA4B,OAA5B;AACA,SAASC,sBAAT,EACEC,0BADF,EAEEC,sBAFF,EAGEC,eAHF,EAIEC,kBAJF,EAKEC,gBALF,EAMEC,iBANF,EAOEC,qBAPF,QAO+B,WAP/B;;AASA,SAASC,mBAAT,CAA6BC,GAA7B,EAAkC;AAChC,SAAOC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqBJ,GAArB,CAAX,CAAP;AACD;;AAED,MAAMK,YAAY,GAAG;AACnBC,EAAAA,mBAAmB,EAAE,KADF;AAEnBC,EAAAA,uBAAuB,EAAE,KAFN;AAGnBC,EAAAA,gBAAgB,EAAE,EAHC;AAInBC,EAAAA,mBAAmB,EAAE,KAJF;AAKnBC,EAAAA,eAAe,EAAE,EALE;AAMnBC,EAAAA,aAAa,EAAE,IANI;AAOnBC,EAAAA,kBAAkB,EAAE,EAPD;AAQnBC,EAAAA,aAAa,EAAEd,mBAAmB,CAAC,SAAD,CAAnB,IAAkC;AAR9B,CAArB;;AAYA,SAASe,OAAT,GAA+C;AAAA,MAA9BC,KAA8B,uEAAtBV,YAAsB;AAAA,MAARW,MAAQ;;AAC7C,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK1B,sBAAL;AAA6B;AAC3B,eAAO,EACL,GAAGwB,KADE;AAELT,UAAAA,mBAAmB,EAAEU,MAAM,CAACE,OAFvB;AAGLX,UAAAA,uBAAuB,EAAE,KAHpB;AAILE,UAAAA,mBAAmB,EAAE;AAJhB,SAAP;AAMD;;AACD,SAAKjB,0BAAL;AAAiC;AAC/B,eAAO,EACL,GAAGuB,KADE;AAELT,UAAAA,mBAAmB,EAAE,KAFhB;AAGLC,UAAAA,uBAAuB,EAAES,MAAM,CAACE,OAH3B;AAILT,UAAAA,mBAAmB,EAAE;AAJhB,SAAP;AAMD;;AACD,SAAKb,gBAAL;AAAuB;AACrB,eAAO,EAAE,GAAGmB,KAAL;AAAYP,UAAAA,gBAAgB,EAAEQ,MAAM,CAACE;AAArC,SAAP;AACD;;AACD,SAAKzB,sBAAL;AAA6B;AAC3B,eAAO,EACL,GAAGsB,KADE;AAELT,UAAAA,mBAAmB,EAAE,KAFhB;AAGLC,UAAAA,uBAAuB,EAAE,KAHpB;AAILE,UAAAA,mBAAmB,EAAEO,MAAM,CAACE;AAJvB,SAAP;AAMD;;AACD,SAAKrB,iBAAL;AAAwB;AACtB,eAAO,EAAE,GAAGkB,KAAL;AAAYL,UAAAA,eAAe,EAAEM,MAAM,CAACE;AAApC,SAAP;AACD;;AACD,SAAKxB,eAAL;AAAsB;AACpB,eAAO,EAAE,GAAGqB,KAAL;AAAYJ,UAAAA,aAAa,EAAEK,MAAM,CAACE;AAAlC,SAAP;AACD;;AACD,SAAKpB,qBAAL;AAA4B;AAC1B,eAAO,EAAE,GAAGiB,KAAL;AAAYH,UAAAA,kBAAkB,EAAEI,MAAM,CAACE;AAAvC,SAAP;AACD;;AACD,SAAKvB,kBAAL;AAAyB;AACvB,eAAO,EAAE,GAAGoB,KAAL;AAAYF,UAAAA,aAAa,EAAEG,MAAM,CAACE;AAAlC,SAAP;AACD;;AACD;AAAS;AACP,eAAO,EAAE,GAAGH;AAAL,SAAP;AACD;AA1CH;AA4CD;;AAED,MAAMI,KAAK,GAAG7B,WAAW,CAACwB,OAAD,CAAzB;AACA,eAAeK,KAAf","sourcesContent":["import { createStore } from \"redux\";\nimport { RANDOM_RADIO_IS_CHEKED,\n  CATEGORIES_RADIO_IS_CHEKED, \n  SEARCH_RADIO_IS_CHEKED , \n  GET_RANDOM_JOKE,\n  GET_FAVORITE_JOKES,\n  CATEGORY_TO_FIND,\n  SEARCH_FIND_VALUE,\n  GET_JOKES_FROM_SEARCH } from \"./actions\";\n\nfunction getFromLocalStorage(key) {\n  return JSON.parse(localStorage.getItem(key));\n}\n\nconst initialState = {\n  randomRadioIsCheked: false,\n  categoriesRadioIsCheked: false,\n  selectedCategory: \"\",\n  seacrhRadioIsCheked: false,\n  searchFindValue: \"\",\n  getRandomJoke: null,\n  getJokesFromSearch: [],\n  favoriteJokes: getFromLocalStorage(\"favJoke\") || [],\n  \n};\n\nfunction reducer(state = initialState, action) {\n  switch (action.type) {\n    case RANDOM_RADIO_IS_CHEKED: {\n      return {\n        ...state,\n        randomRadioIsCheked: action.payload,\n        categoriesRadioIsCheked: false,\n        seacrhRadioIsCheked: false,\n      };\n    }\n    case CATEGORIES_RADIO_IS_CHEKED: {\n      return {\n        ...state,\n        randomRadioIsCheked: false,\n        categoriesRadioIsCheked: action.payload,\n        seacrhRadioIsCheked: false,\n      };\n    }\n    case CATEGORY_TO_FIND: {\n      return { ...state, selectedCategory: action.payload };\n    }\n    case SEARCH_RADIO_IS_CHEKED: {\n      return {\n        ...state,\n        randomRadioIsCheked: false,\n        categoriesRadioIsCheked: false,\n        seacrhRadioIsCheked: action.payload,\n      };\n    }\n    case SEARCH_FIND_VALUE: {\n      return { ...state, searchFindValue: action.payload };\n    }\n    case GET_RANDOM_JOKE: {\n      return { ...state, getRandomJoke: action.payload };\n    }\n    case GET_JOKES_FROM_SEARCH: {\n      return { ...state, getJokesFromSearch: action.payload };\n    }\n    case GET_FAVORITE_JOKES: {\n      return { ...state, favoriteJokes: action.payload };\n    }\n    default: {\n      return { ...state };\n    }\n  }\n}\n\nconst store = createStore(reducer);\nexport default store;\n"]},"metadata":{},"sourceType":"module"}