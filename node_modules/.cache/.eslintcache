[{"/Users/max/Documents/Web-разработка/Exam/Chuck-app/src/index.js":"1","/Users/max/Documents/Web-разработка/Exam/Chuck-app/src/reportWebVitals.js":"2","/Users/max/Documents/Web-разработка/Exam/Chuck-app/src/App.js":"3","/Users/max/Documents/Web-разработка/Exam/Chuck-app/src/store.js":"4","/Users/max/Documents/Web-разработка/Exam/Chuck-app/src/actions.js":"5","/Users/max/Documents/Web-разработка/Exam/Chuck-app/src/commponents/HomePage.js":"6","/Users/max/Documents/Web-разработка/Exam/Chuck-app/src/commponents/FavoriteCards.js":"7","/Users/max/Documents/Web-разработка/Exam/Chuck-app/src/commponents/JokeCard.js":"8","/Users/max/Documents/Web-разработка/Exam/Chuck-app/src/commponents/JokeCardsFromSearch.js":"9"},{"size":616,"mtime":1636721207000,"results":"10","hashOfConfig":"11"},{"size":362,"mtime":1636721207000,"results":"12","hashOfConfig":"11"},{"size":138,"mtime":1636721207000,"results":"13","hashOfConfig":"11"},{"size":1903,"mtime":1636721207000,"results":"14","hashOfConfig":"11"},{"size":416,"mtime":1636721207000,"results":"15","hashOfConfig":"11"},{"size":7080,"mtime":1636721207000,"results":"16","hashOfConfig":"11"},{"size":3033,"mtime":1636721207000,"results":"17","hashOfConfig":"11"},{"size":3047,"mtime":1636721207000,"results":"18","hashOfConfig":"11"},{"size":3292,"mtime":1636721207000,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1afiwyo",{"filePath":"22","messages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34"},{"filePath":"35","messages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39"},"/Users/max/Documents/Web-разработка/Exam/Chuck-app/src/index.js",[],"/Users/max/Documents/Web-разработка/Exam/Chuck-app/src/reportWebVitals.js",[],"/Users/max/Documents/Web-разработка/Exam/Chuck-app/src/App.js",[],"/Users/max/Documents/Web-разработка/Exam/Chuck-app/src/store.js",[],"/Users/max/Documents/Web-разработка/Exam/Chuck-app/src/actions.js",[],"/Users/max/Documents/Web-разработка/Exam/Chuck-app/src/commponents/HomePage.js",[],"/Users/max/Documents/Web-разработка/Exam/Chuck-app/src/commponents/FavoriteCards.js",["40"],"import React from \"react\";\nimport JokeIconMessage from \"../image-icons/JokeImage.png\";\nimport link from \"../image-icons/link.png\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { Fragment } from \"react\";\nimport { GET_FAVORITE_JOKES} from \"../actions\";\n\nfunction setToLocalStorage(key, value) {\n  return localStorage.setItem(key, JSON.stringify(value));\n}\n\n\nexport default function FavoriteCard() {\n  const favoriteJokes = useSelector((state) => state.favoriteJokes);\n  const dispatch = useDispatch();\n\n  function addOrRemoveFromFavorite(joke) {\n    if (favoriteJokes.includes(joke)) {\n      const newArray = favoriteJokes.filter((item) => {\n        return item !== joke;\n      });\n      dispatch({ type: GET_FAVORITE_JOKES, payload: newArray });\n      setToLocalStorage(\"favJoke\", newArray);\n    } else {\n      const newArray = [...favoriteJokes];\n      newArray.push(joke);\n      dispatch({ type: GET_FAVORITE_JOKES, payload: newArray });\n      setToLocalStorage(\"favJoke\", newArray);\n    }\n  }\n  return (\n    <>\n      {favoriteJokes.map((joke) => (\n        <Fragment key={joke.id}>\n        <div className=\"favMainBlock\">\n          {!favoriteJokes.find((joke)=>joke.id === joke.id) ? (\n            <img\n              className=\"favHearthFav\"\n              src=\"https://img.icons8.com/material-outlined/24/fa314a/like--v1.png\"\n              alt=\"favIcon\"\n              onClick={() => addOrRemoveFromFavorite(joke)}\n            />\n          ) : (\n            <img\n              className=\"favHearthFav\"\n              src=\"https://img.icons8.com/ios-glyphs/30/fa314a/like--v1.png\"\n              alt=\"favIcon\"\n              onClick={() => addOrRemoveFromFavorite(joke)}\n            />\n          )}\n          <div style={{ marginRight: \"20px\" }}>\n            <img\n              style={{ width: \"40px\", height: \"40px\" }}\n              src={JokeIconMessage}\n              alt=\"iconMessage\"\n            />\n          </div>\n          <div style={{ width: \"100%\" }}>\n            <p style={{ fontSize: \"10px\", marginBottom: \"5px\" }}>\n              ID:\n              <span style={{ color: \"blue\", marginRight: \"5px\" }}>\n                {joke.id}\n              </span>\n              <a href={joke.url}>\n                <img src={link} alt=\"\" />\n              </a>\n            </p>\n            <p\n              style={{\n                fontSize: \"18px\",\n                lineHeight: \"26px\",\n                marginBottom: \"28px\",\n              }}\n            >\n              {joke.value}\n            </p>\n            <div\n              style={{\n                width: \"100%\",\n                display: \"flex\",\n                justifyContent: \"space-between\",\n                alignItems: \"center\",\n              }}\n            >\n              <span style={{ color: \"#ABABAB\", fontSize: \"10px\" }}>\n                Last update {joke.updated_at}\n              </span>\n              <div className=\"categoryBlockFav\">{joke.categories}</div>\n            </div>\n          </div>\n        </div>\n        </Fragment>\n      ))}\n    </>\n  );\n}\n","/Users/max/Documents/Web-разработка/Exam/Chuck-app/src/commponents/JokeCard.js",[],"/Users/max/Documents/Web-разработка/Exam/Chuck-app/src/commponents/JokeCardsFromSearch.js",["41"],"import React from \"react\";\nimport JokeIconMessage from \"../image-icons/JokeImage.png\";\nimport link from \"../image-icons/link.png\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { Fragment } from \"react\";\nimport {GET_FAVORITE_JOKES} from \"../actions\";\n\nfunction setToLocalStorage(key, value) {\n  return localStorage.setItem(key, JSON.stringify(value));\n}\n\nexport default function JokeCardSearch() {\n  const favoriteJokes = useSelector((state) => state.favoriteJokes);\n  const getJokesFromSearch = useSelector((state) => state.getJokesFromSearch);\n  const getRandomJoke = useSelector((state)=>state.getRandomJoke)\n  const dispatch = useDispatch();\n\n  function addOrRemoveFromFavorite(joke) {\n    if (favoriteJokes.includes(joke)) {\n      const newArray = favoriteJokes.filter((item) => {\n        return item !== joke;\n      });\n      dispatch({ type: GET_FAVORITE_JOKES, payload: newArray });\n      setToLocalStorage(\"favJoke\", newArray);\n    } else {\n      const newArray = [...favoriteJokes];\n      newArray.push(joke);\n      dispatch({ type: GET_FAVORITE_JOKES, payload: newArray });\n      setToLocalStorage(\"favJoke\", newArray);\n    }\n  }\n\n\n\n  return (\n    <>\n    {getJokesFromSearch.length === 0 ? <div style={{fontWeight:'bold', fontSize:'30px'}}>No joke found</div>: getJokesFromSearch.map((joke) => (\n      <Fragment key={joke.id}>\n        <div className=\"jokeMainBlock\">\n          {!favoriteJokes.find((jokeSearch)=> jokeSearch.id === joke.id) ? (\n            <img\n              className=\"favHearth\"\n              src=\"https://img.icons8.com/material-outlined/24/fa314a/like--v1.png\"\n              alt=\"favIcon\"\n              onClick={() => addOrRemoveFromFavorite(joke)}\n            />\n          ) : (\n            <img\n              className=\"favHearth\"\n              src=\"https://img.icons8.com/ios-glyphs/30/fa314a/like--v1.png\"\n              alt=\"favIcon\"\n              onClick={() => addOrRemoveFromFavorite(joke)}\n            />\n          )}\n          <div style={{ marginRight: \"20px\" }}>\n            <img\n              style={{ width: \"40px\", height: \"40px\" }}\n              src={JokeIconMessage}\n              alt=\"iconMessage\"\n            />\n          </div>\n          <div style={{ width: \"100%\" }}>\n            <p style={{ fontSize: \"10px\", marginBottom: \"5px\" }}>\n              ID:\n              <span style={{ color: \"blue\", marginRight: \"5px\" }}>\n                {joke.id}\n              </span>\n              <a href={joke.url}>\n                <img src={link} alt=\"\" />\n              </a>\n            </p>\n            <p\n              style={{\n                fontSize: \"18px\",\n                lineHeight: \"26px\",\n                marginBottom: \"28px\",\n              }}\n            >\n              {joke.value}\n            </p>\n            <div\n              style={{\n                width: \"100%\",\n                display: \"flex\",\n                justifyContent: \"space-between\",\n                alignItems: \"center\",\n              }}\n            >\n              <span style={{ color: \"#ABABAB\", fontSize: \"10px\" }}>\n                Last update {joke.updated_at}\n              </span>\n              <div className=\"categoryBlock\">{joke.categories}</div>\n            </div>\n          </div>\n        </div>\n        </Fragment>\n      ))}\n    </>\n  );\n}\n",{"ruleId":"42","severity":1,"message":"43","line":36,"column":40,"nodeType":"44","messageId":"45","endLine":36,"endColumn":59},{"ruleId":"46","severity":1,"message":"47","line":15,"column":9,"nodeType":"48","messageId":"49","endLine":15,"endColumn":22},"no-self-compare","Comparing to itself is potentially pointless.","BinaryExpression","comparingToSelf","no-unused-vars","'getRandomJoke' is assigned a value but never used.","Identifier","unusedVar"]